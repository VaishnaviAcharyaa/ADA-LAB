#include <stdio.h>
void dfs(int);
int a[10][10], vis[10], n;

int isGraphConnected() {
    int i;
    for (i = 1; i <= n; i++) {
        vis[i] = 0;
    }
   
    // Perform DFS traversal from the first vertex
    dfs(1);
   
    // Check if any vertex is unvisited
    for (i = 1; i <= n; i++) {
        if (vis[i] == 0) {
            return 0;  // Graph is not connected
        }
    }
   
    return 1;  // Graph is connected
}

int main() {
    int i, j;
    printf("Enter the number of vertices: ");
    scanf("%d", &n);
    printf("Enter the adjacency matrix:\n");
    for (i = 1; i <= n; i++) {
        for (j = 1; j <= n; j++) {
            scanf("%d", &a[i][j]);
        }
    }
   
    int r = isGraphConnected();
   
    if (r) {
        printf("The graph is connected.\n");
    } else {
        printf("The graph is not connected.\n");
    }
   
   
    return 0;
}

void dfs(int v) {
    int i;
    vis[v] = 1;
    printf("%d ", v);
    for (i = 1; i <= n; i++) {
        if (a[v][i] == 1 && vis[i] == 0) {
            dfs(i);
        }
    }
}

